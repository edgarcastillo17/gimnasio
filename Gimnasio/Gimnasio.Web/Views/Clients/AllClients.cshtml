@model IEnumerable<Gimnasio.Web.Models.Client>

    <div>
        <h2 class="text-center display-4">Clientes</h2>
        <br />

        <a href="@Url.Action("Create","Clients")" class="btn btn-sm btn-dark">
            <span class="text-white-50"><i class='bx bx-user-plus'></i></span>
            <span class="text-white"> Añadir</span>
        </a>

        <br />
        <br />

        <table class="table table-striped text-center" id="clients">
            <thead class="thead-dark">
                <tr>
                    <th>
                        Nombre
                    </th>
                    <th>
                        Apellidos
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Age)
                    </th>
                    <th>
                        Correo
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Admission)
                    </th>
                    <th>
                        Entrenador
                    </th>
                    <th>
                        Nutriólogo
                    </th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Admission))
                    </td>
                    @if (item.CoachId == null)
                    {
                        <td>
                            Ninguno
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.Coach.Id)
                        </td>
                    }

                    @if (item.NutritionistId == null)
                    {
                        <td>
                            Ninguno
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.Nutritionist.Id)
                        </td>
                    }
                    
                    <td>
                        <a href="@Url.Action("Edit","Clients",new { id = item.Id })" class="btn btn-sm btn-primary">
                            <i class='bx bx-edit-alt'></i>
                        </a>
                        <a href="@Url.Action("Delete","Clients",new { id = item.Id })" class="btn btn-sm btn-danger">
                            <i class='bx bx-trash'></i>
                        </a>
                    </td>
                </tr>
                }
            </tbody>

        </table>
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('#clients').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });
    </script>
}